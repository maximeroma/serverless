service: big-mouth

plugins:
  - serverless-pseudo-parameters
  - serverless-sam
  - serverless-iam-roles-per-function
  - serverless-plugin-tracing

provider:
  name: aws
  runtime: nodejs10.x
  tracing: true
  environment:
    log_level: ${self:custom.logLevel.${self:custom.stage}, self:custom.logLevel.default}
  iamRoleStatements:
    - Effect: Allow
      Action: cloudwatch:PutMetricData
      Resource: "*"
    - Effect: Allow
      Action:
        - xray:PutTraceSegments
        - xray:PutTelemetryRecords
      Resource: "*"

custom:
  stage: ${opt:stage, self:provider.stage}
  logLevel:
    prod: WARN
    default: INFO
  serverless-iam-roles-per-function:
    defaultInherit: true

functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
          path: /
          method: get
    environment:
      restaurants_api: https://8qts1x7xdi.execute-api.us-east-1.amazonaws.com/dev/restaurants
      cognito_user_pool_id: us-east-1_Ln0CECBb3
      cognito_client_id: 6db9o9i75eissgg6ersb6cvd8a
      orders_api: https://8qts1x7xdi.execute-api.us-east-1.amazonaws.com/dev/orders
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: execute-api:invoke
        Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/*/GET/restaurants

  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants/
          method: get
          authorizer: aws_iam
    environment:
      restaurants_table: restaurants
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants

  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_Ln0CECBb3
    environment:
      restaurants_table: restaurants
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants

  place-order:
    handler: functions/place-order.handler
    events:
      - http:
          path: /orders
          method: post
          authorizer:
            arn: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_Ln0CECBb3
    environment:
      order_events_stream: order-events
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events

  notify-restaurant:
    handler: functions/notify-restaurant.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      order_events_stream: order-events
      restaurant_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
      restaurant_notification_retry_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification-retry
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
      - Effect: Allow
        Action: sns:Publish
        Resource:
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification-retry

  retry-notify-restaurant:
    handler: functions/retry-notify-restaurant.handler
    events:
      - sns: restaurant-notification-retry
    environment:
      order_events_stream: order-events
      restaurant_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
    onError: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification-dlq
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
      - Effect: Allow
        Action: sns:Publish
        Resource:
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification

  accept-order:
    handler: functions/accept-order.handler
    events:
      - http:
          path: /orders/accept
          method: post
    environment:
      order_events_stream: order-events
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events

  notify-user:
    handler: functions/notify-user.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      order_events_stream: order-events
      user_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
      - Effect: Allow
        Action: sns:Publish
        Resource:
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification

  fulfill-order:
    handler: functions/fulfill-order.handler
    events:
      - http:
          path: /orders/complete
          method: post
    environment:
      order_events_stream: order-events
      async_metrics: true
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events

  auto-create-api-alarms:
    handler: functions/create-alarms.handler
    events:
      - cloudwatchEvent:
          event:
            source:
              - aws.apigateway
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - apigateway.amazonaws.com
              eventName:
                - CreateDeployment
    environment:
      alarm_actions: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:NotifyMe
      ok_actions: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:NotifyMe
    tracing: false
    iamRoleStatements:
      - Effect: Allow
        Action: apigateway:GET
        Resource:
          - arn:aws:apigateway:#{AWS::Region}::/restapis/*
          - arn:aws:apigateway:#{AWS::Region}::/restapis/*/stages/${self:custom.stage}
      - Effect: Allow
        Action: apigateway:PATCH
        Resource:
          - arn:aws:apigateway:#{AWS::Region}::/restapis/*/stages/${self:custom.stage}
      - Effect: Allow
        Action: cloudwatch:PutMetricAlarm
        Resource: "*"

resources:
  - ${file(resources/sns.yml)}
  - ${file(resources/kinesis.yml)}
  - ${file(resources/dynamodb.yml)}
